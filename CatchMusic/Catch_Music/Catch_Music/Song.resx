<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        WeHfSxKXNBcZFC0qevJTyE+1xSrF4uJbSz2Xbl2GLxMsa1/utHzj8q8l3JKLpQ6l5aWfV3BWXPx5/M8V
        Pw+tTF/Zvspl1ZbVxNXC1TfX+KzZU6ZeVlD2ZG3E2oZ1zHUl6/5eP2P9hfIJ5Vs3UDZIN3RVhFc0bTTb
        uHrj50p+5Y0q/6r6Tfqblm/6sJm7+eoW3y11Ww22lm79tE2w7fb2kO0N1RbV5TuIO/J3PNuZsPPcL26/
        1OzS21W668tu4e6uPTF7Tte41tTs1d+7qhatldb27Ju6r2N/4P6mOru67fWM+tID4ID0wMtfU3+9eTDs
        YNsht0N1h80PbzpCP1LSgDTMaehr5Dd2NSU3dR6ddLSt2bP5yG/2v+1uMW6pOqZ1bNVxyvGi40MnCk70
        t4pae09mnHzSNqPt3qmkU9dPTz7dfibszPmzwWdPnfM7d+K81/mWCx4Xjl50u9h4yeVSw2Xny0d+d/79
        SLtLe8MV1ytNHe4dzZ0TO49f9bl68lrgtbPXWdcv3Yi80Xkz/ubtW1Nvdd3m3n5xJ/vOm7v5dwfvLbpP
        uF/yQO1B+UP9h9V/WP9R3+XSdexR4KPLj2Mf33vCefLqqeTp5+6iZ7Rn5c+Nnte8cHzR0hPc0/Fyysvu
        V6JXg73Ff6r/uem11evDf/n+dbkvqa/7jfjN0NsV73Tf7f57wt9t/dH9D9/nvB/8UDKgO7Dno9vHc58S
        Pz0fnPWZ9Lnii/WX5q9hX+8P5QwNidhitvwogMGKpqcD8HY3ALRkeHboAIAyRXE3kxdEcZ+UE/hvrLi/
        yYsLALt9AYhfBEA4PKNsgdUcMhW2siN4nC9AnZxG63CRpDs5KmxR4Y2FMDA09M4AAFIzAF/EQ0ODm4eG
        vuyEzt4BoDVXcSeUFdkddJuNjK5MVB/4580MgP8A+45wjjWxNzUAAAAJcEhZcwAAFiUAABYlAUlSJPAA
        AAzrSURBVHhe7dwJVFV1Hgdw1LaZmmyqMzWnKd9jB4HHzmMXEEQUIQcQHLOckupkDLkMrsC4hYihKGga
        Gq6ImSJLoAijprLkAi5oLqiQO5AeQEPxO7//4z5C0HigOJW/zzn/c+/9v/u/oO/L//7/9913tRhjjDHG
        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
</value>
  </data>
</root>